@using ReComp.Models
@model ReComp.Areas.Admin.Controllers.ViewModelStick

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Sticker</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TheSticker.İD)

    <div class="form-group">
        @Html.LabelFor(model => model.TheSticker.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TheSticker.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TheSticker.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TheSticker.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TheSticker.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TheSticker.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TheSticker.Short_info, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TheSticker.Short_info, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TheSticker.Short_info, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TheStick_Type.İD, "Type_İD", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="type">
                @foreach (var St in Model.SStick_Type)
                {
                    if (Model.TheSticker.Type_İD == St.İD)
                    {
                        <option  selected value="@St.İD">
                            @St.Name
                        </option>
                    }
                    else
                    {
                        <option value="@St.İD">
                            @St.Name
                        </option>
                    }
                }
            </select>

            @Html.ValidationMessageFor(model => model.TheSticker.Type_İD, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TheProject.İD, "Project_İD", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="prtype">
                @foreach (var Pp in Model.PProject)
                {
                    if (Model.TheSticker.Project_İD == Pp.İD)
                    {
                        <option  selected value="@Pp.İD">
                            @Pp.Name
                        </option>
                    }
                    else
                    {
                        <option  value="@Pp.İD">
                            @Pp.Name
                        </option>
                    }
                }
            </select>

            @Html.ValidationMessageFor(model => model.TheSticker.Project_İD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TheSticker.Area, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TheSticker.Area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TheSticker.Area, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TheSticker.GarageStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.TheSticker.GarageStatus)
                @Html.ValidationMessageFor(model => model.TheSticker.GarageStatus, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.TheSticker.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.TheSticker.Status)
                @Html.ValidationMessageFor(model => model.TheSticker.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
