@*@model ReComp.Models.Sticker*@
@model ReComp.Areas.Admin.Controllers.ViewModelStick
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h2>Create</h2>


<form method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sticker</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TheSticker.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TheSticker.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TheSticker.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheSticker.Project_İD, "Project_İD", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TheSticker.Project_İD, new SelectList(Model.PProject, "İD", "Name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TheSticker.Project_İD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheSticker.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TheSticker.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TheSticker.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheSticker.Short_info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TheSticker.Short_info, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TheSticker.Short_info, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheSticker.Long_Info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TheSticker.Long_Info, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TheSticker.Long_Info, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheSticker.Type_İD, "Type_İD", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TheSticker.Type_İD, new SelectList(Model.SStick_Type, "İD", "Name"), htmlAttributes: new { @class = "form-control" })

                @*@Html.DropDownList("Type_İD", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.TheSticker.Type_İD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheSticker.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TheSticker.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TheSticker.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheSticker.GarageStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TheSticker.GarageStatus)
                    @Html.ValidationMessageFor(model => model.TheSticker.GarageStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.TheSticker.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TheSticker.Status)
                    @Html.ValidationMessageFor(model => model.TheSticker.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            <label>Photo Upload</label>
            <div class="col-md-10">
                <div class="">
                    @Html.TextBoxFor(model => model.TheSticker.fileModels.files, "", new { @type = "file", @multiple = "multiple" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label>Sxem Upload</label>
            <div class="col-md-10">
                <div class="">
                    @Html.TextBoxFor(model => model.TheSticker.fileModelsxem.files, "", new { @type = "file", @multiple = "multiple" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

